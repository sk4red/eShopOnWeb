name: eShopOnWeb Build and Test

on: [workflow_dispatch]

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: gitleaks-action
      uses: zricethezav/gitleaks-action@master

  build:
    runs-on: ubuntu-latest
    needs: gitleaks
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
        include-prerelease: true

    - name: Build with dotnet
      run: dotnet build ./eShopOnWeb.sln --configuration Release
    
    - name: Test with dotnet
      run: dotnet test ./eShopOnWeb.sln --configuration Release

  release:
    name: Release
    needs: build
    strategy:
      matrix:
        kind: ['windows', 'linux', 'macOS']
        include:
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Build Release
        shell: bash
        run: |
          tag=$(git describe --tags --abbrev=0)
          release_name="App-$tag-${{ matrix.target }}"
          # Build everything
          dotnet publish src/Web/Web.csproj --framework net6.0 --runtime "${{ matrix.target }}" -c Release -o "$release_name"
          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            # Pack to zip for Windows
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
          tar czvf "${release_name}.tar.gz" "$release_name"
          fi
          # Delete output directory
          rm -r "$release_name"
      - name: Publish Release
        uses: softprops/action-gh-release@v1
        # only publish if a tagged push
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "App*"
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_TOKEN }}
      - name: Open Issue
        if: failure()  && github.event_name == 'push'
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.CUSTOM_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_.",
            "assignees": ["${{ github.event.pull_request.user.login }}"]
            }'    